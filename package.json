{
  "name": "idpay-portal-welfare-frontend",
  "version": "1.0.0",
  "homepage": "portale-enti",
  "private": true,
  "dependencies": {
    "@date-io/date-fns": "^2.14.0",
    "@mui/icons-material": "^5.8.2",
    "@mui/lab": "^5.0.0-alpha.80",
    "@mui/material": "^5.8.2",
    "@mui/system": "^5.8.1",
    "@mui/x-data-grid": "^5.0.1",
    "@mui/x-data-grid-generator": "^5.0.1",
    "@mui/x-date-pickers": "^5.0.0-alpha.7",
    "@pagopa/mui-italia": "^0.8.12",
    "@pagopa/selfcare-common-frontend": "^1.15.0",
    "@types/react-router-dom": "^5.1.8",
    "@types/react-router-hash-link": "^2.4.5",
    "axios": "^0.23.0",
    "date-fns": "^2.28.0",
    "eslint-plugin-sonarjs": "^0.14.0",
    "formik": "^2.2.9",
    "fp-ts": "^2.11.5",
    "io-ts": "^2.2.16",
    "jest-sonar-reporter": "^2.0.0",
    "lodash": "^4.17.21",
    "node-fetch": "^3.2.10",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-dropzone": "^11.4.2",
    "react-markdown": "^8.0.3",
    "react-router-dom": "^5.2.0",
    "react-router-hash-link": "^2.4.3",
    "react-scripts": "5.0.0",
    "react-use-scrollspy": "^3.0.1",
    "url": "^0.11.0",
    "yup": "^0.32.11"
  },
  "scripts": {
    "clean": "npm-run-all clean:*",
    "start": "craco start",
    "build": "craco build",
    "clean:build": "rimraf build",
    "test": "craco test -i",
    "test:coverage": "craco test -i --coverage --ci --testResultsProcessor jest-sonar-reporter",
    "clean:coverage": "rimraf coverage",
    "eject": "react-scripts eject",
    "lint-autofix": "eslint . -c .eslintrc.js --ext .ts,.tsx --fix",
    "lint": "eslint -f json -o eslint-report.json . -c .eslintrc.js --ext .ts,.tsx --cache",
    "prettify": "prettier --write \"./**/*.{ts,tsx}\"",
    "generate": "npm-run-all generate:*",
    "clean:api-role-permission": "rimraf src/api/generated/role-permission && rimraf openApi/generated",
    "generate:api-role-permission": "yarn run clean:api-role-permission && mkdirp openApi/generated && api-spec-converter --from=openapi_3 --to=swagger_2 openApi/openapi.role-permission.yml > openApi/generated/role-permission-swagger20.json && node ./node_modules/@pagopa/selfcare-common-frontend/utils/fixSwagger20ArraySchemaDef.js openApi/generated/role-permission-swagger20.json && node ./openApi/scripts/api-role-permission_fixPreGen.js && gen-api-models --api-spec openApi/generated/role-permission-swagger20.json --out-dir src/api/generated/role-permission --no-strict --request-types --response-decoders --client && node openApi/scripts/api-role-permission_fixPostGen.js",
    "clean:api-initiative": "rimraf src/api/generated/initiative",
    "generate:api-initiative": "yarn run clean:api-initiative && mkdirp openApi/generated && api-spec-converter --from=openapi_3 --to=swagger_2 openApi/openapi.initiative.yml > openApi/generated/initiative-swagger20.json && node ./node_modules/@pagopa/selfcare-common-frontend/utils/fixSwagger20ArraySchemaDef.js openApi/generated/initiative-swagger20.json && node ./openApi/scripts/api-initiative_fixPreGen.js && gen-api-models --api-spec openApi/generated/initiative-swagger20.json --out-dir src/api/generated/initiative --no-strict --request-types --response-decoders --client && node openApi/scripts/api-initiative_fixPostGen.js",
    "clean:api-groups": "rimraf src/api/generated/groups",
    "generate:api-groups": "yarn run clean:api-groups && mkdirp openApi/generated && api-spec-converter --from=openapi_3 --to=swagger_2 openApi/openapi.groups.yml > openApi/generated/groups-swagger20.json && node ./node_modules/@pagopa/selfcare-common-frontend/utils/fixSwagger20ArraySchemaDef.js openApi/generated/groups-swagger20.json && node ./openApi/scripts/api-groups_fixPreGen.js && gen-api-models --api-spec openApi/generated/groups-swagger20.json --out-dir src/api/generated/groups --no-strict --request-types --response-decoders --client && node openApi/scripts/api-groups_fixPostGen.js",
    "clean:api-email-notification": "rimraf src/api/generated/email-notification",
    "generate:api-email-notification": "yarn run clean:api-email-notification && mkdirp openApi/generated && api-spec-converter --from=openapi_3 --to=swagger_2 openApi/openapi.email-notification.yml > openApi/generated/email-notification-swagger20.json && node ./node_modules/@pagopa/selfcare-common-frontend/utils/fixSwagger20ArraySchemaDef.js openApi/generated/email-notification-swagger20.json && node ./openApi/scripts/api-email-notification_fixPreGen.js && gen-api-models --api-spec openApi/generated/email-notification-swagger20.json --out-dir src/api/generated/email-notification --no-strict --request-types --response-decoders --client && node openApi/scripts/api-email-notification_fixPostGen.js",
    "clean:api-merchants": "rimraf src/api/generated/merchants",
    "generate:api-merchants": "yarn run clean:api-merchants && mkdirp openApi/generated && api-spec-converter --from=openapi_3 --to=swagger_2 openApi/openapi.merchants.yml > openApi/generated/merchants-swagger20.json && node ./node_modules/@pagopa/selfcare-common-frontend/utils/fixSwagger20ArraySchemaDef.js openApi/generated/merchants-swagger20.json && node ./openApi/scripts/api-merchants_fixPreGen.js && gen-api-models --api-spec openApi/generated/merchants-swagger20.json --out-dir src/api/generated/merchants --no-strict --request-types --response-decoders --client && node openApi/scripts/api-merchants_fixPostGen.js"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "@craco/craco": "^6.4.3",
    "@pagopa/openapi-codegen-ts": "^10.0.6",
    "@testing-library/jest-dom": "^5.16.3",
    "@testing-library/react": "12.1.2",
    "@testing-library/user-event": "^14.0.4",
    "@typescript-eslint/eslint-plugin": "^5.0.0",
    "@typescript-eslint/parser": "^5.0.0",
    "api-spec-converter": "^2.12.0",
    "craco-module-federation": "^1.1.0",
    "eslint": "^8.18.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-functional": "^4.2.1",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-react": "^7.26.1",
    "eslint-plugin-react-hooks": "^4.2.0",
    "mkdirp": "^1.0.4",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.7.1",
    "regex-replace": "^2.3.1",
    "rimraf": "^3.0.2"
  },
  "resolutions": {
    "static-eval": "^2.0.2",
    "yargs": "^17.5.1",
    "jsonpath": "^1.1.1",
    "svgo": "^2.8.0",
    "json-schema-ref-parser": "^7.1.0",
    "z-schema": "^4.2.4"
  },
  "jest": {
    "restoreMocks": true,
    "clearMocks": true,
    "resetMocks": true,
    "coveragePathIgnorePatterns": [
      "src/index.js",
      "src/bootstrap.tsx",
      "src/consentAndAnalyticsConfiguration.ts",
      "src/reportWebVitals.ts",
      "src/api/generated",
      "src/locale/it.ts"
    ],
    "moduleNameMapper": {
      "next/router": "<rootDir>/__mocks__/next/router.js",
      "^.+\\.module\\.(css|sass|scss)$": "identity-obj-proxy",
      "^.+\\.(jpg|jpeg|png|gif|webp|avif|svg)$": "<rootDir>/__mocks__/file-mock.js",
      "react-markdown": "<rootDir>/node_modules/react-markdown/react-markdown.min.js"
    }
  }
}
